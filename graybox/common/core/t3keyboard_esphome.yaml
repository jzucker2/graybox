# https://esphome.io/components/esphome
esphome:
  name: '${node_name}'
  # https://github.com/esphome/feature-requests/issues/2476
  # https://community.home-assistant.io/t/how-is-friendly-name-supposed-to-behave/542570/9
  # see more info at https://github.com/jzucker2/goober/blob/master/notes/ESPHOME.md
  # friendly_name: ${friendly_name}
  # name_add_mac_suffix: false
  area: ${area}
  comment: ${comment}
  project: !include ../default_project.yaml
  # https://github.com/espressif/esp-idf/blob/5c51472e82a58098dda8d40a1c4f250c374fc900/docs/en/migration-guides/release-5.x/5.0/peripherals.rst#api-changes
  # Workaround for Button (GPIO39) randomly triggering
  # Increases power usage slightly (~1mA)
  # https://docs.espressif.com/projects/esp-idf/en/v4.4/esp32/api-reference/peripherals/adc.html#_CPPv412adc1_get_raw14adc1_channel_t
  # https://github.com/Xinyuan-LilyGO/T-Keyboard-S3-Pro/blob/arduino-esp32-libs_V2.0.14/platformio.ini
  platformio_options:
    board_build.mcu: esp32s3
    board_build.upload.flash_size: "8MB"
    board_build.upload.maximum_size: 8388608
    board_build.f_cpu: 240000000L
    board_build.f_flash: 80000000L
    build_flags:
      - "-Wall"
      - "-Wextra"
      - "-DCORE_DEBUG_LEVEL"
      - "-DARDUINO_USB_MODE=1"
      - "-DARDUINO_USB_CDC_ON_BOOT=1"
      - "-DARDUINO_RUNNING_CORE=1"
      - "-DARDUINO_EVENT_RUNNING_CORE=1"
      # - "-DBOARD_HAS_PSRAM"
    # build_flags: "-DBOARD_HAS_PSRAM"
    board_build.arduino.memory_type: qio_opi
    board_build.memory_type: qio_opi
    monitor_speed: 115200
    upload_speed: 921600
  # https://community.home-assistant.io/t/got-the-lilygo-t-qt-esp32-s3-display-working/537328
  # https://esphome.io/components/spi.html#generic-spi-device-component
  # https://esphome.io/components/esphome.html#on-boot
  on_boot:
    - priority: -100
      then:
        # - lambda: |-
        #     id(my_lcd).enable();
        #     id(my_lcd).transfer_byte(0x11);
        #     id(my_lcd).disable();
        - lambda: !lambda |-
            id(spidev).enable();
            id(spidev).write_byte(0x4F);
            id(spidev).disable();
        - lambda: !lambda |-
            id(i2cdev).write_byte(0x01, 0x1F);
            // id(i2cdev).write_byte(0x01, 0x02);
            // id(i2cdev).write_byte(0x01, 0x1F);
            if (auto b = id(i2cdev).read_byte(0x01)) {
              ESP_LOGD("lambda", "Received bytes from i2c 0x01");
            }
