# https://esphome.io/components/display/ili9xxx
- platform: ili9xxx
  model: gc9a01a
  id: my_lcd
  cs_pin: GPIO7
  dc_pin: GPIO4
  rotation: ${display_rotation}
  # default is 5s
#  update_interval: 2s
  reset_pin: GPIO8
  dimensions:
    width: 240
    height: 240
  # https://esphome.io/components/display/index.html
  pages:
    - id: VolumePage
      lambda: |-
        float screenheight = it.get_height();
        float screenwidth = it.get_width();
        float halfscreenheight = screenheight / 2;
        float halfscreenwidth = screenwidth / 2;

        // Print volume as percent
        it.printf(halfscreenwidth, 20, id(roboto48), TextAlign::CENTER, "%.0f", id(media_volume_value));

        // media_pause Circle
        it.filled_circle(halfscreenwidth, halfscreenheight - 15, 50, my_light_blue);  
        //if ( id(appletv_media).state == "paused" || id(appletv_media).state == "idle" ) {
        //  it.image(halfscreenwidth, halfscreenheight - 15, media_play_large, ImageAlign::CENTER);
        //} else {
        //  it.image(halfscreenwidth, halfscreenheight - 15, media_pause_large, ImageAlign::CENTER);
        //}

        // Mute Toggle Circle
        it.filled_circle(halfscreenwidth, 200, 30, my_light_blue);  
        it.image(halfscreenwidth, 200, volume_mute, ImageAlign::CENTER);

  on_page_change:
    - to: VolumePage
      then:
        - sensor.rotary_encoder.set_value:
            id: rotaryencoder
            value: !lambda 'return id(receiver_zone_volume).state * 100.0;'
        - component.update: my_lcd
