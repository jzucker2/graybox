# borrowed from https://github.com/esphome/home-assistant-voice-pe/blob/dev/.github/workflows/build.yml

name: Build

on:
  schedule:
    # * is a special character in YAML so you have to quote this string
    # every Sunday at UTC midnight
    - cron: '0 0 * * 0'
  push:
    branches:
      - master
  pull_request:
  workflow_dispatch:
  release:
    types: [published]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  choose-files:
    name: Choose files to build
    runs-on: ubuntu-latest
    outputs:
      build_files: ${{ steps.choose_strings.outputs.content }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.1
      - name: choose strings
        id: choose_strings
        # https://serverfault.com/questions/7503/how-to-determine-if-a-bash-variable-is-empty
        run: |
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            echo "provide pull request files"
            {
              echo 'content<<EOF'
              echo "graybox/example_bluetooth_proxy.yaml"
              echo EOF
            } >> "$GITHUB_OUTPUT"
          else
            echo "provide all release files"
            {
              echo 'content<<EOF'
              echo "graybox/example_bluetooth_proxy.yaml"
              echo EOF
            } >> "$GITHUB_OUTPUT"
          fi
      - name: display final chosen output string
        run: |
          echo "The string is: ${{ steps.choose_strings.outputs.content }}"

  # https://github.com/esphome/build-action
  # https://github.com/esphome/workflows/tree/main
  build-firmware:
    name: Build Firmware
    uses: jzucker2/workflows/.github/workflows/build.yml@0.6.5-alpha
    needs:
      - choose-files
    secrets: inherit
    with:
      files: |
        ${{ needs.choose-files.outputs.build_files }}
      cache: true
      # esphome-version: ${{ env.ESPHOME_VERSION }}
      esphome-version: 2024.10.2
      release-summary: ${{ github.event_name == 'published' && github.event.release.body || '' }}
      release-url: ${{ github.event_name == 'published' && github.event.release.html_url || '' }}
      release-version: ${{ github.event_name == 'published' && github.event.release.tag_name || '' }}
      # My nonsense below
      secrets-environment: graybox
      # secrets-yaml-file: ${{ secrets.ESPHOME_SECRETS_YAML }}
      secrets-yaml-file-path: graybox/secrets.yaml

  comment:
    if: github.event_name == 'pull_request'
    name: Comment on PR
    runs-on: ubuntu-latest
    needs:
      - build-firmware
    steps:
      - name: Comment on PR
        uses: actions/github-script@v7.0.1
        with:
          script: |-
            // const artifacts = await github.rest.actions.listWorkflowRunArtifacts({
            //   owner: context.repo.owner,
            //   repo: context.repo.repo,
            //   run_id: context.runId,
            // })
            // const url = `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}/artifacts/${artifacts['data']['artifacts'][0]['id']}`

            // going with a simpler version below
            const url = `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}#artifacts`
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `Firmware built successfully! :tada:

            [Download][download] and extract the firmware to install with https://web.esphome.io

            Make sure to choose \`<file name>.bin\`.

            [download]: ${url}`
            })

  upload-on-release:
    name: Upload artifacts on release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    needs:
      - build-firmware
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4.1.8
        with:
          path: files

      - name: Display structure of downloaded files
        run: ls -R

      - name: Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        # TODO: also include the manifest.json
        with:
          files: |
            files/**/*.bin
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
